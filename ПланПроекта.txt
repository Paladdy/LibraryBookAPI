--------------------------
fastapi dev main.py или fastapi dev src/ - запуск в режиме разраба
--------------------------
Структура проекта
                     src:
                        books :
                           __init__.py
                           routes.py (Эндпойнты. Тут вызываем функции из service.py)
                           schemas.py (Какие данные отправляем или получаем через API пользователю)
                           models.py (Как данные будут хранится в БД)
                           service.py (Используем для ORM запросов к БД)
                        db:
                           __init__.py
                           main.py (Движок базы данных: инструмент для
                                    пользования БД.)
                     __init__.py
                     config.py (Настройки для всего проекта, в частности
                               определяет доступ к .env = DB)



1) Отделяем исходный код (source - src) от остальных файлов проекта.
2) Создаем .env с путем до DATABASE_URL=
3) Создаем config.py
4) Создаем движок базы данных (main.py)
5) Создаем модель БД : маппинг данных ОRM
6) Создаем shemas.py для принятия и возвращения данных пользователю. (2 класса ??? )
7) Создаем эндпоинты : CRUD routes.py
8) Создаем отдельный service.py для наших CRUD-классов.


---------------ЧТО СДЕЛАТЬ ?-----------

1) Создать UML Каждых классов с функциями. Начать с service.py ! DONE
2) expire_on_commit сделать true для statless состояния (REST API) PROCESS
3) Разобрать datetime models
4) routes разобрать.